# Generated by Django 3.0.7 on 2020-08-10 14:56

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, help_text='uuid is required', null=True, unique=True, validators=[django.core.validators.MaxLengthValidator, django.core.validators.MinLengthValidator], verbose_name='uuid')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='createdAt')),
                ('deletedAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='deletedAt')),
                ('updateAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updateAt')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Discipline',
                'verbose_name_plural': 'Disciplines',
                'db_table': 'Discipline',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, help_text='uuid is required', null=True, unique=True, validators=[django.core.validators.MaxLengthValidator, django.core.validators.MinLengthValidator], verbose_name='uuid')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='createdAt')),
                ('deletedAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='deletedAt')),
                ('updateAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updateAt')),
                ('content', models.TextField()),
                ('type_notify', models.CharField(choices=[('UPDATE', 'UPDATE'), ('NOTIFICATION', 'NOTIFICATION')], default='NOTIFICATION', max_length=12)),
                ('read', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'Notification',
            },
        ),
        migrations.CreateModel(
            name='OrderFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, help_text='uuid is required', null=True, unique=True, validators=[django.core.validators.MaxLengthValidator, django.core.validators.MinLengthValidator], verbose_name='uuid')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='createdAt')),
                ('deletedAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='deletedAt')),
                ('updateAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updateAt')),
                ('fileDescription', models.CharField(blank=True, max_length=200, null=True)),
                ('paper_files', models.FileField(help_text='Please add files if you have any.', upload_to='files')),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'OrderFile',
                'verbose_name_plural': 'OrderFiles',
                'db_table': 'OrderFile',
            },
        ),
        migrations.CreateModel(
            name='PaperType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, help_text='uuid is required', null=True, unique=True, validators=[django.core.validators.MaxLengthValidator, django.core.validators.MinLengthValidator], verbose_name='uuid')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='createdAt')),
                ('deletedAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='deletedAt')),
                ('updateAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updateAt')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'PaperType',
                'verbose_name_plural': 'PaperTypes',
                'db_table': 'PaperType',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, help_text='uuid is required', null=True, unique=True, validators=[django.core.validators.MaxLengthValidator, django.core.validators.MinLengthValidator], verbose_name='uuid')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='createdAt')),
                ('deletedAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='deletedAt')),
                ('updateAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updateAt')),
                ('paper_type', models.CharField(max_length=200, verbose_name='paper_type')),
                ('discipline', models.CharField(max_length=200, verbose_name='discipline')),
                ('academic', models.CharField(max_length=200, verbose_name='academic')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('paper_instructions', models.TextField()),
                ('paper_format', models.CharField(choices=[('MLA', 'MLA'), ('CHICAGO/TURABIAN', 'CHICAGO/TURABIAN'), ('APA7', 'APA7'), ('APA6', 'APA6')], default='MLA', max_length=30)),
                ('spacing', models.CharField(choices=[('SINGLE', 'SINGLE'), ('DOUBLE', 'DOUBLE')], default='SINGLE', max_length=10)),
                ('preference', models.CharField(choices=[('BEST AVAILABLE', 'BEST AVAILABLE'), ('ADVANCED', 'ADVANCED'), ('TOP10', 'TOP10'), ('TOP25', 'TOP25')], default='BEST AVAILABLE', max_length=20)),
                ('deadline', models.DateTimeField(default=django.utils.timezone.now)),
                ('pages', models.PositiveIntegerField()),
                ('sources', models.PositiveIntegerField()),
                ('charts', models.PositiveIntegerField()),
                ('powerpoint', models.PositiveIntegerField()),
                ('native', models.BooleanField(default=False)),
                ('smart', models.BooleanField(default=False)),
                ('progressive', models.BooleanField(default=False)),
                ('payments_url', models.URLField(blank=True, null=True, unique=True, verbose_name='payment_url')),
                ('is_smart_paper', models.BooleanField(default=False, help_text='Whether an order is  a smart paper.')),
                ('paid', models.BooleanField(default=False, help_text='Whether an order is paid or not.', verbose_name='paid')),
                ('cancelled', models.BooleanField(default=False, help_text='Whether an order is cancelled.', verbose_name='cancelled')),
                ('draft', models.BooleanField(default=False, help_text='Whether to store an order as draft', verbose_name='draft')),
                ('orders_confirmed_status', models.BooleanField(default=False, help_text='Whether an order is confirmed.')),
                ('dispute_status', models.BooleanField(default=False, help_text='Whether an order is or was a dispute.')),
                ('revision_status', models.BooleanField(default=False, help_text='Whether an order is or was a revision.')),
                ('additional_materials', models.ManyToManyField(blank=True, to='app.OrderFiles')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'Order',
            },
        ),
    ]
